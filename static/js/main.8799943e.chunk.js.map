{"version":3,"sources":["Components/RandomPrompt.js","Components/PromptMenu.js","Components/Dialog.js","Components/NextButton.js","Components/ThemeCreatorMenu/ColorPickerBase.js","Components/ThemeCreatorMenu/ColorPicker.js","Components/ThemeCreatorMenu/ThemePickerForm.js","Components/ThemeCreatorMenu/ThemePicker.js","Components/NavBar.js","prompts.js","Theme.js","Components/App.js","serviceWorker.js","index.js"],"names":["RandomPrompt","react_default","a","createElement","StyledPropmtContainer","theme","this","props","id","className","titleCase","prompt1","prompt2","Component","styled","div","_templateObject","colors","text_prompt","toString","str","undefined","toLowerCase","split","i","length","charAt","toUpperCase","slice","join","PromptMenu","createList","list","_this","index","push","key","prompts","event","preventDefault","BurgerMenu","styles","bodyClassName","React","bmBurgerBars","background","menu","bmCross","text_menu","bmMenu","bmMorphShape","fill","bmItemList","color","bmOverlay","ConfirmationDialog","handleCancel","onClose","handleOk","onOk","handleChange","value","setState","Dialog_default","maxWidth","onEntering","handleEntering","aria-labelledby","open","DialogTitle_default","DialogContent_default","DialogActions_default","Button_default","onClick","withStyles","root","borderRadius","border","height","padding","boxShadow","paper","width","maxHeight","NextButton","StyledSpan","concat","outOfPrompts","buttonText","span","NextButton_templateObject","lighten","isLight","ColorPickerBase","input","marginTop","hex","paddingLeft","label","fontSize","lib","style","onChangeComplete","onChange","common","CustomPicker","ColorPicker","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","displayColorPicker","state","handleClose","colorName","rgb","ColorPickerContainer","ThemeCreatorMenu_ColorPickerBase","onCompleteChange","ColorPicker_templateObject","r","g","b","ThemePickerForm","saveTheme","bind","assertThisInitialized","setColor","handleSave","objectSpread","defineProperty","StyledForm","onSubmit","keys","map","ThemeCreatorMenu_ColorPicker","colorLabels","toRgb","type","form","ThemePickerForm_templateObject","ThemePicker","showMenu","place","togglePopover","toState","_this2","popoverProps","isOpen","onOuterAction","body","ThemeCreatorMenu_ThemePickerForm","console","log","StyledDiv","StyledPopover","assign","ThemePicker_StyledSpan","fa","ThemePicker_templateObject","_templateObject2","Popover","_templateObject3","NavBar","StyledNavBar","Components_PromptMenu","ThemeCreatorMenu_ThemePicker","NavBar_templateObject","navbar","Theme","_colors","tinycolor","localStorage","setItem","JSON","stringify","getRgb","getItem","parse","error","reduce","result","newcolors","colorConvert","colorUnwrap","hasOwnProperty","clone","App","loadTheme","seed","dialogOpen","nextPrompt","showDialog","handleThemeSave","min","max","rand","Math","random","text","possible","floor","makeSeed","localSeed","localIndex","parseInt","shuffleSeed","shuffle","newIndex","StyledApp","Components_NavBar","Components_RandomPrompt","Components_NextButton","App_templateObject","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","Components_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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CA,WACA,MACA,eACA,aACA,UACA,WACA,YACA,YACA,cACA,YACA,YACA,UACA,sBACA,SACA,aACA,WACA,aACA,YACA,aACA,aACA,aACA,gBACA,QACA,aACA,sBACA,aACA,UACA,UACA,cACA,WACA,YACA,QACA,UACA,aACA,UACA,gBACA,gBACA,SACA,aACA,WACA,YACA,WACA,YACA,QACA,QACA,YACA,+BACA,SACA,SACA,YACA,QACA,eACA,WACA,UACA,YACA,WACA,SACA,aACA,UACA,QACA,kBACA,YACA,SACA,uBACA,WACA,cACA,YACA,UACA,OACA,SACA,aACA,WACA,YACA,YACA,iBACA,MACA,OACA,OACA,gBACA,OACA,aACA,gBACA,gBACA,aACA,gBACA,sBACA,aACA,UACA,iBACA,iBACA,oBACA,UACA,UACA,SACA,iBACA,gBACA,kBACA,mBACA,WACA,QACA,gBACA,iBACA,oBACA,eACA,OACA,UACA,aACA,SACA,YACA,YACA,YACA,OACA,YACA,6BCnGWsI,cAvEb,SAAAA,IAAehE,OAAAC,EAAA,EAAAD,CAAArG,KAAAqK,GACbrK,KAAKsK,QAAU,CACbF,OAAQG,KAAU,QAClB/H,KAAM+H,KAAU,WAChB7H,UAAW6H,KAAU,WACrB3J,YAAa2J,KAAU,WACvBhI,WAAYgI,KAAU,YAGxBvK,KAAKoI,YAAc,CACfgC,OAAQ,SACR5H,KAAM,QACNE,UAAW,YACX9B,YAAa,UACb2B,WAAY,oEAUR5B,GACRX,KAAKW,OAASA,EACd6J,aAAaC,QAAQ,QAASC,KAAKC,UAAU3K,KAAK4K,+CAIlD,IACsC,MAAjCJ,aAAaK,QAAQ,WACxB7K,KAAKW,OAAS+J,KAAKI,MAAMN,aAAaK,QAAQ,WAEhD,MAAME,GAEJ,YADE3B,QAAQ2B,MAAMA,qCAqBX,IAAApJ,EAAA3B,KACP,OAAOqG,OAAO4B,KAAKjI,KAAKsK,SAASU,OAAO,SAACC,EAAQlI,GAE/C,OADAkI,EAAOlI,GAASpB,EAAK2I,QAAQvH,GAAOsF,QAC7B4C,GACR,iCAnBQC,GACT,IAAIC,EAAe9E,OAAO4B,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","file":"static/js/main.8799943e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components'\n\nclass RandomPrompt extends Component {\n    render(){\n        return(\n            <StyledPropmtContainer theme={this.props.theme} id=\"promptContainer\">\n                <span id=\"prompt1\" className=\"prompt\">{titleCase(this.props.prompt1)}</span>\n                <span id=\"prompt2\" className=\"prompt\">{titleCase(this.props.prompt2)}</span>\n            </StyledPropmtContainer>\n        )\n    }\n}\n\nconst StyledPropmtContainer = styled.div`\n    & span {\n        color: ${props => props.theme.colors.text_prompt.toString()};\n    }\n`\n\nvar titleCase = function (str) {\n    if(str == undefined) return \n\tstr = str.toLowerCase().split(' ');\n\tfor (var i = 0; i < str.length; i++) {\n\t\tstr[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\n\t}\n\treturn str.join(' ');\n};\n  \n\nexport default RandomPrompt","import React from 'react'\nimport { slide as Menu } from 'react-burger-menu'\n\nclass PromptMenu extends React.Component {\n  showSettings (event) {\n    event.preventDefault();\n  }\n\n  createList = () => {\n    let list = []\n    for (let i = 0; i < this.props.index; i+=2) {\n      let children = []\n      //Create the parent and add the children\n      list.push(<li key={\"list\"+i}>{this.props.prompts[i] + \", \" + this.props.prompts[i+1]}</li>)\n    }\n    return list\n}\n\n  render () {\n    return (\n      <Menu styles={ styles(this.props.theme) } bodyClassName={ \"my-class\" }>\n       <span> Used Prompts </span>\n       <ul id=\"oldPrompts\">\n           {this.createList()}\n        </ul>\n      </Menu>\n    );\n  }\n}\n\nvar styles = (theme) => {\n  let comp = {\n    bmBurgerBars: {\n      background: theme.colors.menu.toString()\n    },\n    bmCross: {\n      background: theme.colors.text_menu.toString()\n    },\n    bmMenu: {\n      background: theme.colors.menu.toString()\n    },\n    bmMorphShape: {\n      fill: theme.colors.menu.toString()\n    },\n    bmItemList: {\n      color: theme.colors.text_menu.toString()\n    },\n    bmOverlay: {\n      background: 'rgba(0, 0, 0, 0.3)'\n    }\n  }\n  return comp\n}\n\n\nexport default PromptMenu","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\n\n  \n  class ConfirmationDialog extends React.Component {  \n  \n    handleCancel = () => {\n      this.props.onClose();\n    };\n  \n    handleOk = () => {\n      this.props.onOk();\n    };\n  \n    handleChange = (event, value) => {\n      this.setState({ value });\n    };\n  \n    render() {\n  \n      return (\n        <Dialog\n          maxWidth=\"sm\"\n          onEntering={this.handleEntering}\n          aria-labelledby=\"confirmation-dialog-title\"\n          open={this.props.open}\n          className=\"dialog\"\n        >\n          <DialogTitle id=\"confirmation-dialog-title\">Are you sure you want to go to the next prompt?</DialogTitle>\n          <DialogContent>\n              <h4>You wont be able to undo this!</h4>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleCancel} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleOk} color=\"primary\">\n              Ok\n            </Button>\n          </DialogActions>\n        </Dialog>\n      );\n    }\n  }\n\n  const styles = theme => ({\n    root: {\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n        borderRadius: 3,\n        border: 0,\n        color: 'white',\n        height: 48,\n        padding: '0 30px',\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    },\n    paper: {\n      width: '80%',\n      maxHeight: 435,\n      background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    },\n  });\n\n  export default withStyles(styles)(ConfirmationDialog);","import React, {Component} from 'react'\nimport styled from 'styled-components'\n\n\nclass NextButton extends Component {\n    render(){\n        return(\n            <StyledSpan theme={this.props.theme} className={`glass ${this.props.outOfPrompts?\"disabled\":\"\"}`} \n                  onClick={this.props.onClick}\n                  id=\"button\">{this.props.buttonText}\n            </StyledSpan>\n        );\n    }\n}\n\nconst StyledSpan = styled.span`\n        background-color: ${props => props.theme.colors.text_prompt.toString()}; \n        background-image: linear-gradient(${props => {\n            let color = props.theme.colors.text_prompt;\n            return `${color.toString()}, ${color.lighten().toString(40)}`\n        }});    \n\n        &:after{\n            background: linear-gradient(rgba(255,255,255,0.8), rgba(255,255,255,0.2));\n        }\n\n        &:hover{\n            background: linear-gradient(${props => {\n                let color = props.theme.colors.text_prompt;\n                return `${color.lighten(10).toString()}, ${color.lighten().toString(50)}`\n            }});    \n        }\n        color: ${props => props.theme.colors.text_prompt.isLight()? 'black' : 'white'};    \n`\n\nexport default NextButton","import React from 'react';\nimport { CustomPicker, SliderPicker } from 'react-color';\nimport { EditableInput } from 'react-color/lib/components/common'\n\nclass ColorPickerBase extends React.Component {\n  render() {\n    var styles = {\n        input: {\n            height: 20,\n            borderRadius: '5px',\n            marginTop: '5px',\n            border: `1px solid ${ this.props.hex }`,\n            paddingLeft: 10,\n      },\n      label: {\n        fontSize: '12px',\n        color: '#999',\n      },\n    };\n\n    return (\n        <div>\n    <SliderPicker\n    style={ styles }\n    label=\"hex\"\n    color={ this.props.hex }\n    onChangeComplete={ this.props.onChangeComplete } \n    onChange={this.props.onChange}\n    />\n    <EditableInput\n          style={{ input: styles.input }}\n          value={ this.props.hex }\n          onChangeComplete={ this.props.onChangeComplete }\n          onChange={this.props.onChange}\n    />\n    </div>)\n  }\n}\n\n\n\nexport default CustomPicker(ColorPickerBase);\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { CompactPicker } from 'react-color';\nimport  ColorPickerBase from './ColorPickerBase'\n\nclass ColorPicker extends Component {\n\n    constructor (props) {\n      super(props);\n      this.state = {\n        displayColorPicker: false,\n        color: props.color,\n      };\n    }\n      handleClick = () => {\n        this.setState({ displayColorPicker: !this.state.displayColorPicker })\n      };\n    \n      handleClose = () => {\n        this.setState({ displayColorPicker: false })\n      };\n    \n      handleChange = (color) => {\n        this.props.onChange(this.props.colorName, color)\n        this.setState({ color: color.rgb })\n      };\n    \n      render() {\n\n        return (\n          <ColorPickerContainer color={this.state.color}>\n            {this.props.label? <label> {this.props.label} </label> : null}\n            <div className=\"swatch\" onClick={ this.handleClick }>\n              <div className=\"color\"/>\n            </div>\n            { this.state.displayColorPicker ? <div className=\"swatch-popover\">\n              <div  className=\"cover\" onClick={ this.handleClose }/>\n              <ColorPickerBase color={ this.state.color } onChange={ this.handleChange } onCompleteChange={this.props.onCompleteChange}/>\n            </div> : null }\n    \n          </ColorPickerContainer>\n        )\n      }\n    }\n\n    export default ColorPicker\n  \n  const ColorPickerContainer = styled.div`\n    display: block;\n    margin-top: 20px;\n\n    & .color {\n      float: left;\n      width: 36px;\n      height: 14px;\n      borderRadius: 2px;\n      background: ${props  => `rgba(${ props.color.r }, ${ props.color.g }, ${ props.color.b }, ${ props.color.a });`}\n    }\n  \n    & .swatch {\n      padding: 5px;\n      background: #fff;\n      borderRadius: 1px;\n      boxShadow: 0 0 0 1px rgba(0,0,0,.1);\n      display: inline-block;\n      cursor: pointer;\n    }\n  \n    & .swatch-popover: {\n      display: block;\n  \n    }\n  \n    & .cover: {\n      position: fixed;\n      top: 0px;\n      right: 0px;\n      bottom: 0px;\n      left: 0px;\n    }\n\n    & label {\n        float: left;\n    }\n  `\n\n","import React from 'react'\nimport styled from 'styled-components'\nimport { hex2rgb } from '../../Utils'\nimport ColorPicker from './ColorPicker';\n\n\nclass ThemePickerForm extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.saveTheme = this.saveTheme.bind(this);\n        this.state = {\n            colors: {}\n        }\n\n        this.setColor = this.setColor.bind(this);\n        this.saveTheme = this.saveTheme.bind(this);\n    }\n\n    saveTheme(event){\n        event.preventDefault()\n        this.props.handleSave(this.state.colors)\n    }\n\n    setColor(key, color){\n        this.setState({colors: {...this.state.colors, [key]: color}});\n    }\n    render(){\n        return(\n            <StyledForm onSubmit={this.saveTheme}>\n                {Object.keys(this.props.theme.colors).map(function(color, index){\n                    return <ColorPicker \n                                label={`${this.props.theme.colorLabels[color]}: `} \n                                color={this.props.theme.colors[color].toRgb()}\n                                onChangeComplete={this.setColor}\n                                onChange={this.setColor}\n                                key={index}\n                                colorName={color}\n                                />\n                }, this)}\n                <input type=\"submit\" value=\"Save\" />\n            </StyledForm>\n        )\n      }\n  }\n\n  /**\n   * <ColorPicker label=\"Primary: \" color={{r: 20, g: 20, b: 100, a: 1}}/>\n                <ColorPicker label=\"Primary: \" color={{r: 20, g: 20, b: 100, a: 1}}/>\n   */\n\n  const StyledForm = styled.form`\n    \n  `\n\n  export default ThemePickerForm","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport Popover from 'react-popover'\nimport { FaPalette } from 'react-icons/fa'\n\nimport ThemePickerForm from './ThemePickerForm'\n\n\nclass ThemePicker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showMenu: false,\n      place: \"below\"\n    }\n\n    this.togglePopover = this.togglePopover.bind(this);\n  }\n\n  togglePopover(toState) {\n    const showMenu =\n      typeof toState === \"boolean\" ? toState : !this.state.showMenu\n    this.setState({\n      showMenu,\n    })\n  }\n\n  render() {\n    const popoverProps = {\n      isOpen: this.state.showMenu,\n      place: this.state.place,\n      onOuterAction: () => this.togglePopover(false),\n      body: [\n        <ThemePickerForm handleSave={this.props.handleSave} theme={this.props.theme}/>\n      ]\n  }\n  console.log(\"THEMES\", this.props.theme)\n    return (\n      <StyledDiv className=\"ThemePickerMenu\">\n        \n        <StyledPopover {...popoverProps} theme={this.props.theme}>\n          <StyledSpan className=\"themepicker-icon\" onClick={this.togglePopover} theme={this.props.theme}> \n            <FaPalette /> \n          </StyledSpan>\n        </StyledPopover>\n      </StyledDiv>\n    )\n  }\n}\n  \n  export default ThemePicker\n\nconst StyledDiv = styled.div`\n  display: inline-block;\n  position: absolute;\n  top: 26px;\n  right: 26px;\n\n`\n\n const StyledSpan = styled.span`\n  cursor: pointer;\n  margin-right: 26px;\n\n  & svg {\n    height: 36px;\n    width: 36px;\n    fill: ${props => props.theme.colors.menu.toString()};\n  }\n `\n\n  const StyledPopover = styled(Popover)`\n    & .Popover-body {\n      background: ${props => props.theme.colors.menu.toString()};\n      color: ${props => props.theme.colors.text_menu.toString()};\n      padding : 20px;\n    }\n\n    & .Popover-tip {\n      fill: ${props => props.theme.colors.menu.toString()};\n    }\n  `\n\n\n\n\n   /*\n        \n        );*/","import React, {Component} from 'react'\nimport styled from 'styled-components'\n\nimport PromptMenu from './PromptMenu'\nimport ThemePicker from './ThemeCreatorMenu/ThemePicker'\n\nclass NavBar extends Component {\n    render(){\n        return(\n            <StyledNavBar theme={this.props.theme}>\n                <PromptMenu theme={this.props.theme} prompts={this.props.prompts}index={this.props.index}/>\n                <ThemePicker theme={this.props.theme} handleSave={this.props.handleSave}/>\n            </StyledNavBar>\n        );\n    }\n}\n\nconst StyledNavBar = styled.div`\n    position: relative;\n    top: 0;\n    width: 100%;\n    padding-bottom: 46px;\n    background: ${props => props.theme.colors.navbar.toString()};\n`;\n\nexport default NavBar","const prompts = [\n    \"wizard's staff\",\n    \"waterfall\",\n    \"zombies\",\n    \"sandcastle\",\n    \"fangs\",\n    \"tattoo\",\n    \"family crest\",\n    \"spaceship\",\n    \"mythical beast\",\n    \"spooky tree\",\n    \"alien\",\n    \"tropical cocktail\",\n    \"robot\",\n    \"dragons\",\n    \"tombstone\",\n    \"medieval goblet\",\n    \"king's throne\",\n    \"mermaid\",\n    \"vampire\",\n    \"witch's cauldron\",\n    \"tooth fairy\",\n    \"deep sea monster\",\n    \"magic carpet\",\n    \"sculpture\",\n    \"coral reef\",\n    \"wine bottle\",\n    \"statue of liberty\",\n    \"beauty\",\n    \"beast\",\n    \"elephant\",\n    \"mayan ruins\",\n    \"birds\",\n    \"camera\",\n    \"bowl of soup\",\n    \"breakfast\",\n    \"snack\",\n    \"lunch\",\n    \"dinner\",\n    \"flower base\",\n    \"ladder\",\n    \"full moon\",\n    \"bright sun\",\n    \"autumn\",\n    \"spring\",\n    \"summer\",\n    \"winter\",\n    \"butterfly\",\n    \"caterpillar\",\n    \"troll\",\n    \"roller skates\",\n    \"rain boots\",\n    \"weeds\",\n    \"flowers\",\n    \"bedroom\",\n    \"kitchen\",\n    \"dining room\",\n    \"bathroom\",\n    \"egg hatching\",\n    \"wrist watch\",\n    \"night\",\n    \"harvest\",\n    \"pond\",\n    \"raincoat\",\n    \"hat\",\n    \"water bottle\",\n    \"flashlight\",\n    \"top hat\",\n    \"sailboat\",\n    \"dandelion\",\n    \"earthworm\",\n    \"bank robber\",\n    \"policeman\",\n    \"superhero\",\n    \"villain\",\n    \"a view out a window\",\n    \"cactus\",\n    \"sunflowers\",\n    \"mosquito\",\n    \"spider web\",\n    \"star fish\",\n    \"flip flops\",\n    \"lawn chair\",\n    \"trampoline\",\n    \"pots and pans\",\n    \"sword\",\n    \"lighthouse\",\n    \"pie on a windowsill\",\n    \"houseplant\",\n    \"soldier\",\n    \"chimney\",\n    \"barbed wire\",\n    \"squirrel\",\n    \"hot sauce\",\n    \"chain\",\n    \"beehive\",\n    \"helicopter\",\n    \"hot dog\",\n    \"venus flytrap\",\n    \"stained glass\",\n    \"sphinx\",\n    \"skateboard\",\n    \"serenity\",\n    \"open book\",\n    \"werewolf\",\n    \"hourglass\",\n    \"tower\",\n    \"camel\",\n    \"cleopatra\",\n    \"Your favorite book character\",\n    \"Desert\",\n    \"Forest\",\n    \"Mountains\",\n    \"Ocean\",\n    \"Pumpkin seed\",\n    \"Pinecone\",\n    \"Octopus\",\n    \"Mannequin\",\n    \"Lollipop\",\n    \"Sticky\",\n    \"Footprints\",\n    \"Tractor\",\n    \"Slime\",\n    \"Island paradise\",\n    \"Sand dune\",\n    \"Archer\",\n    \"Your favorite outfit\",\n    \"Trophies\",\n    \"Fishing fly\",\n    \"Blackhole\",\n    \"Cyclops\",\n    \"Swan\",\n    \"Mirror\",\n    \"Microphone\",\n    \"Pretzels\",\n    \"Newspaper\",\n    \"Submarine\",\n    \"Scrambled eggs\",\n    \"Eel\",\n    \"Wave\",\n    \"Bike\",\n    \"Leather boots\",\n    \"Keys\",\n    \"Coffee cup\",\n    \"Self-portrait\",\n    \"Snake charmer\",\n    \"Playground\",\n    \"Sumo wrestler\",\n    \"Chrystal chandelier\",\n    \"Eight ball\",\n    \"Secrets\",\n    \"Treasure chest\",\n    \"Children's toy\",\n    \"Something sparkly\",\n    \"Penguin\",\n    \"Unicorn\",\n    \"Pirate\",\n    \"Tribal pattern\",\n    \"Suit of armor\",\n    \"Pinball machine\",\n    \"Erupting volcano\",\n    \"Seahorse\",\n    \"Ninja\",\n    \"Happy monster\",\n    \"Futuristic car\",\n    \"Three little pigs\",\n    \"Magic amulet\",\n    \"Yeti\",\n    \"Toolbox\",\n    \"Fish bones\",\n    \"Zipper\",\n    \"Carpenter\",\n    \"Handcuffs\",\n    \"Dollhouse\",\n    \"Mask\",\n    \"Telescope\",\n    \"Piano\",\n]\n\nexport default prompts","import tinycolor from 'tinycolor2'\n\n\n\n\nclass Theme {\n  constructor() {\n    this._colors = {\n      navbar: tinycolor(\"#000\"),\n      menu: tinycolor(\"#909090\"),\n      text_menu: tinycolor(\"#b8b7ad\"),\n      text_prompt: tinycolor(\"#8bede3\"),\n      background: tinycolor(\"#b8b7ad\"),\n    }\n\n    this.colorLabels = {\n        navbar: \"Navbar\",\n        menu: \"Menus\",\n        text_menu: \"Menu Text\",\n        text_prompt: \"Prompts\",\n        background: \"Background\",\n    }\n}\n  \n  /**\n   *\n   *\n   * @param {*} colors\n   * @memberof Theme\n   */\n  saveTheme(colors) {\n    this.colors = colors;\n    localStorage.setItem('theme', JSON.stringify(this.getRgb()));\n  }\n\n  loadTheme() {\n    try {\n      if(localStorage.getItem('theme') != null)\n      this.colors = JSON.parse(localStorage.getItem('theme'));\n    }\n    catch(error){\n        console.error(error)\n      return \n    }\n    \n  }\n\n  set colors(newcolors){\n    let colorConvert = Object.keys(newcolors).reduce((result, color) => {\n        //Color is a olor from a color picker\n        let colorUnwrap = newcolors[color];\n        if(colorUnwrap.hasOwnProperty('hex') && colorUnwrap.hasOwnProperty('source'))\n            result[color] = tinycolor(colorUnwrap.hex);\n        else\n            result[color] = tinycolor(colorUnwrap);\n      return result\n  }, {})\n\n    this._colors = {...this._colors, ...colorConvert}\n  console.log(\"setting Colors\", this._colors, colorConvert)\n  }\n\n  getRgb() {\n    return Object.keys(this._colors).reduce((result, color) => {\n      result[color] = this._colors[color].toRgb()\n      return result\n  }, {})\n  }\n\n  get colors() {\n    return Object.keys(this._colors).reduce((result, color) => {\n      result[color] = this._colors[color].clone()\n      return result\n  }, {})\n  }\n}\n\nexport default Theme\n","import React, { Component } from 'react';\nimport '../App.css';\nimport RandomPrompt from'./RandomPrompt'\nimport PromptMenu from './PromptMenu'\nimport ConfirmDialog from './Dialog'\nimport NextButton from './NextButton'\nimport NavBar from './NavBar'\nimport styled from 'styled-components'\n\n\nimport shuffleSeed from 'shuffle-seed'\nimport prompts from '../prompts'\n\nimport Theme from '../Theme'\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n\n    //loadTheme\n    this.theme = new Theme();\n    this.theme.loadTheme()\n\n    this.state = {\n      seed: \"\",\n      prompts: [],\n      index: 0,\n      outOfPrompts: false,\n      dialogOpen: false,\n      colors: this.theme.colors\n    }\n\n    this.nextPrompt = this.nextPrompt.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.showDialog = this.showDialog.bind(this);\n    this.handleThemeSave = this.handleThemeSave.bind(this);\n  }\n\n  componentDidMount(){\n    //Set Seed\n    if (!localStorage.getItem('seed'))\n      localStorage.setItem('seed', makeSeed(5, 10));\n    let localSeed = localStorage.getItem('seed')\n\n    //Set index\n    let localIndex = parseInt(localStorage.getItem('index'));\n    if(localIndex)\n      this.setState({index: localIndex})\n\n    //generate prompt list\n    this.setState({prompts: shuffleSeed.shuffle(prompts, localSeed)})\n  }\n\n  nextPrompt() {\n    let newIndex = this.state.index + 2\n    if(newIndex < prompts.length-1){\n      this.setState({index: newIndex})\n      localStorage.setItem('index', newIndex)\n    } else{\n      this.setState({outOfPrompts: true})\n    }\n    this.handleClose()\n  }\n\n  showDialog(){\n    this.setState({dialogOpen: true})\n  }\n\n  handleClose (){\n    this.setState({dialogOpen: false });\n  };\n\n  handleThemeSave(colors){\n    this.theme.saveTheme(colors);\n    this.setState({colors: this.theme.colors})\n  }\n\n\n  render() {\n    let buttonText = this.state.outOfPrompts? \"No more prompts :(\" : \"Next Prompt\";\n    let index = this.state.index\n    return (\n      <StyledApp theme = {this.theme} className=\"App\">\n        <NavBar theme = {this.theme} handleSave={this.handleThemeSave} prompts={this.state.prompts}index={this.state.index}/>\n        {/*<ConfirmDialog onOk={this.nextPrompt} onClose={this.handleClose} open={this.state.dialogOpen}/>*/}\n        {/*<PromptMenu prompts={this.state.prompts} index={this.state.index} theme={new Theme()}/>*/}\n        <RandomPrompt theme = {this.theme}  prompt1={this.state.prompts[index]} prompt2={this.state.prompts[index+1]}/>\n        <NextButton theme = {this.theme} buttonText={buttonText} outOfPrompts={this.state.outOfPrompts} onClick={this.nextPrompt}/>\n        \n      </StyledApp>\n    );\n  }\n}\n\nexport default App;\n\nfunction makeSeed(min, max) {\n  let rand = Math.random() * (max - min) + min;\n  var text = \"\";\n  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n  for (var i = 0; i < rand; i++)\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n  return text;\n}\n\nconst StyledApp = styled.div`\n    background: ${props => props.theme.colors.background.toString()};\n`;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { PreTheme } from './Theme'\n\nReactDOM.render(\n        <App />\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}