{"version":3,"sources":["logo.svg","RandomPrompt.js","oldPrompts.js","prompts.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","RandomPrompt","react_default","a","createElement","id","className","titleCase","this","props","prompt1","prompt2","Component","str","undefined","toLowerCase","split","i","length","charAt","toUpperCase","slice","join","PromptMenu","createList","list","console","log","_this","index","push","key","prompts","event","preventDefault","BurgerMenu","React","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","seed","outOfPrompts","nextPrompt","bind","assertThisInitialized","localStorage","getItem","setItem","min","max","rand","Math","random","text","possible","floor","makeSeed","localSeed","localIndex","parseInt","setState","shuffleSeed","shuffle","newIndex","buttonText","oldPrompts","src_RandomPrompt","concat","onClick","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,yMCGlCC,gMAEE,OACIC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,mBACJH,EAAAC,EAAAC,cAAA,QAAMC,GAAG,UAAUC,UAAU,UAAUC,EAAUC,KAAKC,MAAMC,UAC5DR,EAAAC,EAAAC,cAAA,QAAMC,GAAG,UAAUC,UAAU,UAAUC,EAAUC,KAAKC,MAAME,kBALjDC,cAYvBL,EAAY,SAAUM,GACtB,QAAUC,GAAPD,EAAH,CACHA,EAAMA,EAAIE,cAAcC,MAAM,KAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAIK,OAAQD,IAC/BJ,EAAII,GAAKJ,EAAII,GAAGE,OAAO,GAAGC,cAAgBP,EAAII,GAAGI,MAAM,GAExD,OAAOR,EAAIS,KAAK,OAIFrB,YCMAsB,6MAvBbC,WAAa,WACX,IAAIC,EAAO,GACXC,QAAQC,IAAI,QAASF,EAAM,QAASG,EAAKnB,OACzC,IAAK,IAAIQ,EAAI,EAAGA,EAAIW,EAAKnB,MAAMoB,MAAOZ,GAAG,EAAG,CAG1CQ,EAAKK,KAAK5B,EAAAC,EAAAC,cAAA,MAAI2B,IAAK,OAAOd,GAAIW,EAAKnB,MAAMuB,QAAQf,GAAK,KAAOW,EAAKnB,MAAMuB,QAAQf,EAAE,KAEpF,OAAOQ,+EAZKQ,GACZA,EAAMC,kDAeN,OACEhC,EAAAC,EAAAC,cAAC+B,EAAA,MAAD,KACCjC,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,MAAIC,GAAG,cACFG,KAAKgB,sBArBQY,IAAMxB,4BCgLhBoB,EAnLC,CACZ,iBACA,YACA,UACA,aACA,QACA,SACA,eACA,YACA,iBACA,cACA,QACA,oBACA,QACA,UACA,YACA,kBACA,gBACA,UACA,UACA,mBACA,cACA,mBACA,eACA,YACA,aACA,cACA,oBACA,SACA,QACA,WACA,cACA,QACA,SACA,eACA,YACA,QACA,QACA,SACA,cACA,SACA,YACA,aACA,SACA,SACA,SACA,SACA,YACA,cACA,QACA,gBACA,aACA,QACA,UACA,UACA,UACA,cACA,WACA,eACA,cACA,QACA,UACA,OACA,WACA,MACA,eACA,aACA,UACA,WACA,YACA,YACA,cACA,YACA,YACA,UACA,sBACA,SACA,aACA,WACA,aACA,YACA,aACA,aACA,aACA,gBACA,QACA,aACA,sBACA,aACA,UACA,UACA,cACA,WACA,YACA,QACA,UACA,aACA,UACA,gBACA,gBACA,SACA,aACA,WACA,YACA,WACA,YACA,QACA,QACA,YACA,+BACA,SACA,SACA,YACA,QACA,eACA,WACA,UACA,YACA,WACA,SACA,aACA,UACA,QACA,kBACA,YACA,SACA,uBACA,WACA,cACA,YACA,UACA,OACA,SACA,aACA,WACA,YACA,YACA,iBACA,MACA,OACA,OACA,gBACA,OACA,aACA,gBACA,gBACA,aACA,gBACA,sBACA,aACA,UACA,iBACA,iBACA,oBACA,UACA,UACA,SACA,iBACA,gBACA,kBACA,mBACA,WACA,QACA,gBACA,iBACA,oBACA,eACA,OACA,UACA,aACA,SACA,YACA,YACA,YACA,OACA,YACA,SC1GWK,cA3Db,SAAAA,EAAY5B,GAAM,IAAAmB,EAAA,OAAAU,OAAAC,EAAA,EAAAD,CAAA9B,KAAA6B,IAChBT,EAAAU,OAAAE,EAAA,EAAAF,CAAA9B,KAAA8B,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAlC,KAAMC,KACDkC,MAAQ,CACXC,KAAM,GACNZ,QAAS,GACTH,MAAO,EACPgB,cAAc,GAGhBjB,EAAKkB,WAAalB,EAAKkB,WAAWC,KAAhBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAV,KATFA,mFAcXqB,aAAaC,QAAQ,SACxBD,aAAaE,QAAQ,OA8C3B,SAAkBC,EAAKC,GAKrB,IAJA,IAAIC,EAAOC,KAAKC,UAAYH,EAAMD,GAAOA,EACrCK,EAAO,GACPC,EAAW,iEAENzC,EAAI,EAAGA,EAAIqC,EAAMrC,IACxBwC,GAAQC,EAASvC,OAAOoC,KAAKI,MAAMJ,KAAKC,SAAWE,EAASxC,SAE9D,OAAOuC,EAtD0BG,CAAS,EAAG,KAC3C,IAAIC,EAAYZ,aAAaC,QAAQ,QACrCxB,QAAQC,IAAI,aAAcnB,KAAKmC,MAAMC,MACrClB,QAAQC,IAAI,YAAakC,GAGzB,IAAIC,EAAaC,SAASd,aAAaC,QAAQ,UAC5CY,GACDtD,KAAKwD,SAAS,CAACnC,MAAOiC,IAGxBpC,QAAQC,IAAI,6BAA8BmC,EAAY,OAAQtD,KAAKmC,MAAMC,MACzEpC,KAAKwD,SAAS,CAAChC,QAASiC,IAAYC,QAAQlC,EAAS6B,0CAIrD,IAAIM,EAAW3D,KAAKmC,MAAMd,MAAQ,EAC/BsC,EAAWnC,EAAQd,OAAO,GAC3BV,KAAKwD,SAAS,CAACnC,MAAOsC,IACtBlB,aAAaE,QAAQ,QAASgB,IAE9B3D,KAAKwD,SAAS,CAACnB,cAAc,IAG/BnB,QAAQC,IAAI,oBAAqBnB,KAAKmC,MAAMd,wCAK5C,IAAIuC,EAAa5D,KAAKmC,MAAME,aAAc,qBAAuB,cAC7DhB,EAAQrB,KAAKmC,MAAMd,MAEvB,OADAH,QAAQC,IAAI,eAAgBnB,KAAKmC,MAAMd,OAErC3B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACiE,EAAD,CAAYrC,QAASxB,KAAKmC,MAAMX,QAASH,MAAOrB,KAAKmC,MAAMd,QAC3D3B,EAAAC,EAAAC,cAACkE,EAAD,CAAc5D,QAASF,KAAKmC,MAAMX,QAAQH,GAAQlB,QAASH,KAAKmC,MAAMX,QAAQH,EAAM,KACpF3B,EAAAC,EAAAC,cAAA,QAAME,UAAS,SAAAiE,OAAW/D,KAAKmC,MAAME,aAAa,WAAW,IAAM2B,QAAShE,KAAKsC,WACjFzC,GAAG,UAAU+D,WAtDHxD,aCGE6D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7E,EAAAC,EAAAC,cAAC4E,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.fffa20e4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n\n\nclass RandomPrompt extends Component {\n    render(){\n        return(\n            <div id=\"promptContainer\">\n                <span id=\"prompt1\" className=\"prompt\">{titleCase(this.props.prompt1)}</span>\n                <span id=\"prompt2\" className=\"prompt\">{titleCase(this.props.prompt2)}</span>\n            </div>\n        )\n    }\n}\n\n\nvar titleCase = function (str) {\n    if(str == undefined) return \n\tstr = str.toLowerCase().split(' ');\n\tfor (var i = 0; i < str.length; i++) {\n\t\tstr[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\n\t}\n\treturn str.join(' ');\n};\n  \n\nexport default RandomPrompt","import React from 'react'\nimport { slide as Menu } from 'react-burger-menu'\n\nclass PromptMenu extends React.Component {\n  showSettings (event) {\n    event.preventDefault();\n  }\n\n  createList = () => {\n    let list = []\n    console.log(\"list \", list, \"index\", this.props)\n    for (let i = 0; i < this.props.index; i+=2) {\n      let children = []\n      //Create the parent and add the children\n      list.push(<li key={\"list\"+i}>{this.props.prompts[i] + \", \" + this.props.prompts[i+1]}</li>)\n    }\n    return list\n}\n\n  render () {\n    return (\n      <Menu>\n       <span> Used Prompts </span>\n       <ul id=\"oldPrompts\">\n           {this.createList()}\n        </ul>\n      </Menu>\n    );\n  }\n}\n\nexport default PromptMenu","const prompts = [\n    \"wizard's staff\",\n    \"waterfall\",\n    \"zombies\",\n    \"sandcastle\",\n    \"fangs\",\n    \"tattoo\",\n    \"family crest\",\n    \"spaceship\",\n    \"mythical beast\",\n    \"spooky tree\",\n    \"alien\",\n    \"tropical cocktail\",\n    \"robot\",\n    \"dragons\",\n    \"tombstone\",\n    \"medieval goblet\",\n    \"king's throne\",\n    \"mermaid\",\n    \"vampire\",\n    \"witch's cauldron\",\n    \"tooth fairy\",\n    \"deep sea monster\",\n    \"magic carpet\",\n    \"sculpture\",\n    \"coral reef\",\n    \"wine bottle\",\n    \"statue of liberty\",\n    \"beauty\",\n    \"beast\",\n    \"elephant\",\n    \"mayan ruins\",\n    \"birds\",\n    \"camera\",\n    \"bowl of soup\",\n    \"breakfast\",\n    \"snack\",\n    \"lunch\",\n    \"dinner\",\n    \"flower base\",\n    \"ladder\",\n    \"full moon\",\n    \"bright sun\",\n    \"autumn\",\n    \"spring\",\n    \"summer\",\n    \"winter\",\n    \"butterfly\",\n    \"caterpillar\",\n    \"troll\",\n    \"roller skates\",\n    \"rain boots\",\n    \"weeds\",\n    \"flowers\",\n    \"bedroom\",\n    \"kitchen\",\n    \"dining room\",\n    \"bathroom\",\n    \"egg hatching\",\n    \"wrist watch\",\n    \"night\",\n    \"harvest\",\n    \"pond\",\n    \"raincoat\",\n    \"hat\",\n    \"water bottle\",\n    \"flashlight\",\n    \"top hat\",\n    \"sailboat\",\n    \"dandelion\",\n    \"earthworm\",\n    \"bank robber\",\n    \"policeman\",\n    \"superhero\",\n    \"villain\",\n    \"a view out a window\",\n    \"cactus\",\n    \"sunflowers\",\n    \"mosquito\",\n    \"spider web\",\n    \"star fish\",\n    \"flip flops\",\n    \"lawn chair\",\n    \"trampoline\",\n    \"pots and pans\",\n    \"sword\",\n    \"lighthouse\",\n    \"pie on a windowsill\",\n    \"houseplant\",\n    \"soldier\",\n    \"chimney\",\n    \"barbed wire\",\n    \"squirrel\",\n    \"hot sauce\",\n    \"chain\",\n    \"beehive\",\n    \"helicopter\",\n    \"hot dog\",\n    \"venus flytrap\",\n    \"stained glass\",\n    \"sphinx\",\n    \"skateboard\",\n    \"serenity\",\n    \"open book\",\n    \"werewolf\",\n    \"hourglass\",\n    \"tower\",\n    \"camel\",\n    \"cleopatra\",\n    \"Your favorite book character\",\n    \"Desert\",\n    \"Forest\",\n    \"Mountains\",\n    \"Ocean\",\n    \"Pumpkin seed\",\n    \"Pinecone\",\n    \"Octopus\",\n    \"Mannequin\",\n    \"Lollipop\",\n    \"Sticky\",\n    \"Footprints\",\n    \"Tractor\",\n    \"Slime\",\n    \"Island paradise\",\n    \"Sand dune\",\n    \"Archer\",\n    \"Your favorite outfit\",\n    \"Trophies\",\n    \"Fishing fly\",\n    \"Blackhole\",\n    \"Cyclops\",\n    \"Swan\",\n    \"Mirror\",\n    \"Microphone\",\n    \"Pretzels\",\n    \"Newspaper\",\n    \"Submarine\",\n    \"Scrambled eggs\",\n    \"Eel\",\n    \"Wave\",\n    \"Bike\",\n    \"Leather boots\",\n    \"Keys\",\n    \"Coffee cup\",\n    \"Self-portrait\",\n    \"Snake charmer\",\n    \"Playground\",\n    \"Sumo wrestler\",\n    \"Chrystal chandelier\",\n    \"Eight ball\",\n    \"Secrets\",\n    \"Treasure chest\",\n    \"Children's toy\",\n    \"Something sparkly\",\n    \"Penguin\",\n    \"Unicorn\",\n    \"Pirate\",\n    \"Tribal pattern\",\n    \"Suit of armor\",\n    \"Pinball machine\",\n    \"Erupting volcano\",\n    \"Seahorse\",\n    \"Ninja\",\n    \"Happy monster\",\n    \"Futuristic car\",\n    \"Three little pigs\",\n    \"Magic amulet\",\n    \"Yeti\",\n    \"Toolbox\",\n    \"Fish bones\",\n    \"Zipper\",\n    \"Carpenter\",\n    \"Handcuffs\",\n    \"Dollhouse\",\n    \"Mask\",\n    \"Telescope\",\n    \"Piano\",\n]\n\nexport default prompts","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport RandomPrompt from'./RandomPrompt'\nimport PromptMenu from './oldPrompts'\n\nimport shuffleSeed from 'shuffle-seed'\nimport prompts from './prompts'\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      seed: \"\",\n      prompts: [],\n      index: 0,\n      outOfPrompts: false\n    }\n\n    this.nextPrompt = this.nextPrompt.bind(this);\n  }\n\n  componentDidMount(){\n    //Set Seed\n    if (!localStorage.getItem('seed'))\n      localStorage.setItem('seed', makeSeed(5, 10));\n    let localSeed = localStorage.getItem('seed')\n    console.log(\"state.seed\", this.state.seed)\n    console.log(\"localSeed\", localSeed)\n\n    //Set index\n    let localIndex = parseInt(localStorage.getItem('index'));\n    if(localIndex)\n      this.setState({index: localIndex})\n\n    //generate prompt list\n    console.log(\"component did mount index:\", localIndex, \"seed\", this.state.seed)\n    this.setState({prompts: shuffleSeed.shuffle(prompts, localSeed)})\n  }\n\n  nextPrompt() {\n    let newIndex = this.state.index + 2\n    if(newIndex < prompts.length-1){\n      this.setState({index: newIndex})\n      localStorage.setItem('index', newIndex)\n    } else{\n      this.setState({outOfPrompts: true})\n    }\n\n    console.log(\"next prompt index\", this.state.index)\n    \n  }\n\n  render() {\n    let buttonText = this.state.outOfPrompts? \"No more prompts :(\" : \"Next Prompt\";\n    let index = this.state.index\n    console.log(\"render index\", this.state.index)\n    return (\n      <div className=\"App\">\n        <PromptMenu prompts={this.state.prompts} index={this.state.index}/>\n        <RandomPrompt prompt1={this.state.prompts[index]} prompt2={this.state.prompts[index+1]}/>\n        <span className={`glass ${this.state.outOfPrompts?\"disabled\":\"\"}`} onClick={this.nextPrompt}\n        id=\"button\">{buttonText}</span>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n\nfunction makeSeed(min, max) {\n  let rand = Math.random() * (max - min) + min;\n  var text = \"\";\n  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n  for (var i = 0; i < rand; i++)\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n  return text;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}